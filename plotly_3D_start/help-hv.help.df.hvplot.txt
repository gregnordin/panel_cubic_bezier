hv.help(df.hvplot):


Help on hvPlotTabular in module hvplot.plotting.core object:

class hvPlotTabular(hvPlotBase)
 |  hvPlotTabular(data, custom_plots={}, **metadata)
 |  
 |  The plotting method: `df.hvplot(...)` creates a plot similarly to the familiar Pandas
 |  `df.plot` method.
 |  
 |  For more detailed options use a specific ploting method, e.g. `df.hvplot.line`.
 |  
 |  Reference: https://hvplot.holoviz.org/reference/index.html
 |  
 |  Parameters
 |  ----------
 |  x : string, optional
 |      Field name(s) to draw x-positions from. If not specified, the index is
 |      used.
 |  y : string or list, optional
 |      Field name(s) to draw y-positions from. If not specified, all numerical
 |      fields are used.
 |  kind : string, optional
 |      The kind of plot to generate, e.g. 'area', 'bar', 'line', 'scatter' etc. To see the
 |      available plots run `print(df.hvplot.__all__)`.
 |  **kwds : optional
 |      Additional keywords arguments are documented in `hvplot.help('scatter')` or similar
 |      depending on the kind of plot.
 |  
 |  Returns
 |  -------
 |  A Holoviews object. You can `print` the object to study its composition and run
 |  
 |  >>> import holoviews as hv
 |  >>> hv.help(the_holoviews_object)
 |  
 |  to learn more about its parameters and options.
 |  
 |  Examples
 |  --------
 |  
 |  >>> import hvplot.pandas
 |  >>> from bokeh.sampledata.degrees import data as deg
 |  
 |  >>> line = deg.hvplot(
 |  ...     x="Year",
 |  ...     y=["Art and Performance", "Business", "Biology", "Education", "Computer Science"],
 |  ...     value_label="% of Degrees Earned by Women",
 |  ...     legend="top",
 |  ...     height=500,
 |  ...     width=620,
 |  ...     kind="line",
 |  ... )
 |  >>> line
 |  
 |  You can can add *markers* to a `line` plot by overlaying with a `scatter` plot.
 |  
 |  >>> scatter = deg.hvplot.scatter(
 |  ...     x="Year",
 |  ...     y=["Art and Performance", "Business", "Biology", "Education", "Computer Science"],
 |  ...     value_label="% of Degrees Earned by Women",
 |  ...     legend="top",
 |  ...     height=500,
 |  ...     width=620,
 |  ... )
 |  >>> line * scatter
 |  
 |  Please note that you can pass widgets or reactive functions as arguments instead of
 |  literal values, c.f. https://hvplot.holoviz.org/user_guide/Widgets.html.
 |  
 |  Method resolution order:
 |      hvPlotTabular
 |      hvPlotBase
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  area(self, x=None, y=None, y2=None, stacked=True, *, alpha, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      The `area` plot can be used to color the area under a line or to color the space between two
 |      lines.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/area.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name(s) to draw x-positions from. If not specified, the index is
 |          used.
 |      y : string, optional
 |          Field name to draw the first y-position from
 |      y2 : string, optional
 |          Field name to draw the second y-position from
 |      stacked : boolean, optional
 |          Whether to stack multiple areas. Default is False.
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('area')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Example
 |      -------
 |      
 |      >>> import hvplot.pandas
 |      >>> from bokeh.sampledata.degrees import data
 |      >>> data.hvplot.area(x='Year', y='Computer Science',
 |      ...     label='% of Computer Science Degrees Earned by Women',
 |      ...     ylim=(0, 100), width=500, height=400, color='pink'
 |      ... )
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: http://docs.bokeh.org/en/latest/docs/user_guide/plotting.html#directed-areas
 |      - HoloViews: http://holoviews.org/reference/elements/matplotlib/Area.html
 |      - Pandas: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.area.html
 |      - Plotly: https://plotly.com/python/filled-area-plots/
 |      - Matplotlib:  https://matplotlib.org/stable/gallery/lines_bars_and_markers/fill_between_demo.html
 |      - Wiki: https://en.wikipedia.org/wiki/Area_chart
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  bar(self, x=None, y=None, *, alpha, bar_width, cmap, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      A vertical bar plot
 |      
 |      A `bar` plot represents categorical data with rectangular bars
 |      with heights proportional to the values that they represent. The x-axis
 |      plots categories and the y axis represents the value scale.
 |      The bars are of equal width which allows for instant comparison of data.
 |      
 |      `bar` can be used on dataframes with regular Index or MultiIndex.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/bar.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name to draw x-positions from. If not specified, the index is used.
 |      y : string, optional
 |          Field name to draw y-positions from. If not specified, all numerical
 |          fields are used.
 |      stacked : bool, optional
 |          If True, creates a stacked bar plot. Default is False.
 |      color : str or array-like, optional.
 |          The color for each of the series. Possible values are:
 |      
 |          A single color string referred to by name, RGB or RGBA code, for instance 'red' or
 |          '#a98d19.
 |      
 |          A sequence of color strings referred to by name, RGB or RGBA code, which will be used
 |          for each series recursively. For instance ['green','yellow'] each field’s line will be
 |          filled in green or yellow, alternatively. If there is only a single series to be
 |          plotted, then only the first color from the color list will be used.
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('bar')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Example
 |      -------
 |      
 |      >>> import hvplot.pandas
 |      >>> import pandas as pd
 |      
 |      >>> df = pd.DataFrame({
 |      ...     'speed': [0.1, 17.5, 40, 48, 52, 69, 88],
 |      ...     'lifespan': [2, 8, 70, 1.5, 25, 12, 28],
 |      ...     },
 |      ...     index= ['snail', 'pig', 'elephant', 'rabbit', 'giraffe', 'coyote', 'horse']
 |      ... )
 |      >>> df.hvplot.bar(rot=90, color=["#457278", "#615078"])
 |      
 |      You can stack the bars by setting `stacked=True`
 |      
 |      >>> df.hvplot.bar(stacked=True, rot=90, color=["#457278", "#615078"])
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: https://docs.bokeh.org/en/latest/docs/reference/models/glyphs/vbar.html
 |      - HoloViews: https://holoviews.org/reference/elements/bokeh/Bars.html
 |      - Matplotlib: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.bar.html
 |      - Pandas: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.bar.html
 |      - Plotly: https://plotly.com/python/bar-charts/
 |      - Wiki: https://en.wikipedia.org/wiki/Bar_chart
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      bar_width
 |      cmap
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  barh(self, x=None, y=None, *, alpha, bar_width, cmap, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      A horizontal bar plot
 |      
 |      A `barh` plot represents categorical data with rectangular bars
 |      with heights proportional to the values that they represent. The y-axis of the chart
 |      plots categories and the x-axis represents the value scale.
 |      The bars are of equal width which allows for instant comparison of data.
 |      
 |      `barh` can be used on dataframes with regular Index or MultiIndex.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/barh.html
 |      
 |      Parameters
 |      ----------
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('image')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Examples
 |      --------
 |      
 |      >>> import hvplot.pandas
 |      >>> import pandas as pd
 |      
 |      >>> df = pd.DataFrame(
 |      ...     {
 |      ...         "speed": [0.1, 17.5, 40, 48, 52, 69, 88],
 |      ...         "lifespan": [2, 8, 70, 1.5, 25, 12, 28],
 |      ...     },
 |      ...     index=["snail", "pig", "elephant", "rabbit", "giraffe", "coyote", "horse"],
 |      ... )
 |      >>> df.hvplot.barh(color=["#457278", "#615078"])
 |      
 |      You can stack the bars by setting `stacked=True`
 |      
 |      >>> df.hvplot.barh(stacked=True, color=["#457278", "#615078"])
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: https://docs.bokeh.org/en/latest/docs/reference/models/glyphs/hbar.html
 |      - HoloViews: https://holoviews.org/reference/elements/bokeh/Bars.html
 |      - Matplotlib: https://matplotlib.org/stable/gallery/lines_bars_and_markers/barh.html
 |      - Pandas: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.barh.html
 |      - Plotly: https://plotly.com/python/horizontal-bar-charts/
 |      - Wiki: https://en.wikipedia.org/wiki/Bar_chart
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      bar_width
 |      cmap
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  bivariate(self, x=None, y=None, colorbar=True, *, alpha, cmap, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, bandwidth, cut, filled, levels, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      A bivariate, density plot uses nested contours (or contours plus colors) to indicate
 |      regions of higher local density.
 |      
 |      `bivariate` plots can be a useful alternative to scatter plots, if your data are too dense
 |      to plot each point individually.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/bivariate.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name to draw x-positions from. If not specified, the index is used.
 |      y : string, optional
 |          Field name to draw y-positions from
 |      colorbar: boolean
 |          Whether to display a colorbar
 |      bandwidth: int, optional
 |          The bandwidth of the kernel for the density estimate. Default is None.
 |      cut: Integer, Optional
 |          Draw the estimate to cut * bw from the extreme data points. Default is None.
 |      filled : bool, optional
 |          If True the the contours will be filled. Default is False.
 |      levels: int, optional
 |          The number of contour lines to draw. Default is 10.
 |      
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('bivariate')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Examples
 |      --------
 |      
 |      >>> import hvplot.pandas
 |      >>> from bokeh.sampledata.autompg import autompg_clean as df
 |      
 |      >>> bivariate = df.hvplot.bivariate("accel", "mpg")
 |      >>> bivariate
 |      
 |      To get a better intuitive understanding of the `bivariate` plot, you can try overlaying the
 |      corresponding scatter plot.
 |      
 |      >>> scatter = df.hvplot.scatter("accel", "mpg")
 |      >>> bivariate * scatter
 |      
 |      References
 |      ----------
 |      
 |      - ggplot: https://bio304-class.github.io/bio304-fall2017/ggplot-bivariate.html
 |      - HoloViews: https://holoviews.org/reference/elements/bokeh/Bivariate.html
 |      - Plotly: https://plotly.com/python/2d-histogram-contour/
 |      - Matplotlib: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.contour.html
 |      - Wiki: https://en.wikipedia.org/wiki/Bivariate_analysis
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      cmap
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  box(self, y=None, by=None, *, box_alpha, box_cmap, box_color, box_fill_alpha, box_fill_color, box_hover_alpha, box_hover_color, box_hover_fill_alpha, box_hover_fill_color, box_hover_line_alpha, box_hover_line_cap, box_hover_line_color, box_hover_line_dash, box_hover_line_join, box_hover_line_width, box_line_alpha, box_line_cap, box_line_color, box_line_dash, box_line_join, box_line_width, box_muted, box_muted_alpha, box_muted_color, box_muted_fill_alpha, box_muted_fill_color, box_muted_line_alpha, box_muted_line_cap, box_muted_line_color, box_muted_line_dash, box_muted_line_join, box_muted_line_width, box_nonselection_alpha, box_nonselection_color, box_nonselection_fill_alpha, box_nonselection_fill_color, box_nonselection_line_alpha, box_nonselection_line_cap, box_nonselection_line_color, box_nonselection_line_dash, box_nonselection_line_join, box_nonselection_line_width, box_selection_alpha, box_selection_color, box_selection_fill_alpha, box_selection_fill_color, box_selection_line_alpha, box_selection_line_cap, box_selection_line_color, box_selection_line_dash, box_selection_line_join, box_selection_line_width, box_visible, box_width, cmap, outlier_alpha, outlier_color, outlier_fill_alpha, outlier_fill_color, outlier_hover_alpha, outlier_hover_color, outlier_hover_fill_alpha, outlier_hover_fill_color, outlier_hover_line_alpha, outlier_hover_line_cap, outlier_hover_line_color, outlier_hover_line_dash, outlier_hover_line_join, outlier_hover_line_width, outlier_line_alpha, outlier_line_cap, outlier_line_color, outlier_line_dash, outlier_line_join, outlier_line_width, outlier_muted_alpha, outlier_muted_color, outlier_muted_fill_alpha, outlier_muted_fill_color, outlier_muted_line_alpha, outlier_muted_line_cap, outlier_muted_line_color, outlier_muted_line_dash, outlier_muted_line_join, outlier_muted_line_width, outlier_nonselection_alpha, outlier_nonselection_color, outlier_nonselection_fill_alpha, outlier_nonselection_fill_color, outlier_nonselection_line_alpha, outlier_nonselection_line_cap, outlier_nonselection_line_color, outlier_nonselection_line_dash, outlier_nonselection_line_join, outlier_nonselection_line_width, outlier_selection_alpha, outlier_selection_color, outlier_selection_fill_alpha, outlier_selection_fill_color, outlier_selection_line_alpha, outlier_selection_line_cap, outlier_selection_line_color, outlier_selection_line_dash, outlier_selection_line_join, outlier_selection_line_width, whisker_alpha, whisker_color, whisker_hover_alpha, whisker_hover_color, whisker_hover_line_alpha, whisker_hover_line_cap, whisker_hover_line_color, whisker_hover_line_dash, whisker_hover_line_join, whisker_hover_line_width, whisker_line_alpha, whisker_line_cap, whisker_line_color, whisker_line_dash, whisker_line_join, whisker_line_width, whisker_muted, whisker_muted_alpha, whisker_muted_color, whisker_muted_line_alpha, whisker_muted_line_cap, whisker_muted_line_color, whisker_muted_line_dash, whisker_muted_line_join, whisker_muted_line_width, whisker_nonselection_alpha, whisker_nonselection_color, whisker_nonselection_line_alpha, whisker_nonselection_line_cap, whisker_nonselection_line_color, whisker_nonselection_line_dash, whisker_nonselection_line_join, whisker_nonselection_line_width, whisker_selection_alpha, whisker_selection_color, whisker_selection_line_alpha, whisker_selection_line_cap, whisker_selection_line_color, whisker_selection_line_dash, whisker_selection_line_join, whisker_selection_line_width, whisker_visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      The `box` plot gives you a visual idea about 5 components in a dataset. It is also
 |      known as *box and whiskers plot*. It is useful for describing measures of
 |      central tendencies and measures of dispersion in a dataset.
 |      
 |      `box` plots are most useful when grouped by additional dimensions.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/box.html
 |      
 |      Parameters
 |      ----------
 |      y : string or sequence
 |          Field in the data to compute distribution from.
 |      by : string or sequence
 |          Field in the data to group by.
 |      kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('box')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      References
 |      ----------
 |      
 |      - Wiki: https://en.wikipedia.org/wiki/Box_plot
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      box_alpha
 |      box_cmap
 |      box_color
 |      box_fill_alpha
 |      box_fill_color
 |      box_hover_alpha
 |      box_hover_color
 |      box_hover_fill_alpha
 |      box_hover_fill_color
 |      box_hover_line_alpha
 |      box_hover_line_cap
 |      box_hover_line_color
 |      box_hover_line_dash
 |      box_hover_line_join
 |      box_hover_line_width
 |      box_line_alpha
 |      box_line_cap
 |      box_line_color
 |      box_line_dash
 |      box_line_join
 |      box_line_width
 |      box_muted
 |      box_muted_alpha
 |      box_muted_color
 |      box_muted_fill_alpha
 |      box_muted_fill_color
 |      box_muted_line_alpha
 |      box_muted_line_cap
 |      box_muted_line_color
 |      box_muted_line_dash
 |      box_muted_line_join
 |      box_muted_line_width
 |      box_nonselection_alpha
 |      box_nonselection_color
 |      box_nonselection_fill_alpha
 |      box_nonselection_fill_color
 |      box_nonselection_line_alpha
 |      box_nonselection_line_cap
 |      box_nonselection_line_color
 |      box_nonselection_line_dash
 |      box_nonselection_line_join
 |      box_nonselection_line_width
 |      box_selection_alpha
 |      box_selection_color
 |      box_selection_fill_alpha
 |      box_selection_fill_color
 |      box_selection_line_alpha
 |      box_selection_line_cap
 |      box_selection_line_color
 |      box_selection_line_dash
 |      box_selection_line_join
 |      box_selection_line_width
 |      box_visible
 |      box_width
 |      cmap
 |      outlier_alpha
 |      outlier_color
 |      outlier_fill_alpha
 |      outlier_fill_color
 |      outlier_hover_alpha
 |      outlier_hover_color
 |      outlier_hover_fill_alpha
 |      outlier_hover_fill_color
 |      outlier_hover_line_alpha
 |      outlier_hover_line_cap
 |      outlier_hover_line_color
 |      outlier_hover_line_dash
 |      outlier_hover_line_join
 |      outlier_hover_line_width
 |      outlier_line_alpha
 |      outlier_line_cap
 |      outlier_line_color
 |      outlier_line_dash
 |      outlier_line_join
 |      outlier_line_width
 |      outlier_muted_alpha
 |      outlier_muted_color
 |      outlier_muted_fill_alpha
 |      outlier_muted_fill_color
 |      outlier_muted_line_alpha
 |      outlier_muted_line_cap
 |      outlier_muted_line_color
 |      outlier_muted_line_dash
 |      outlier_muted_line_join
 |      outlier_muted_line_width
 |      outlier_nonselection_alpha
 |      outlier_nonselection_color
 |      outlier_nonselection_fill_alpha
 |      outlier_nonselection_fill_color
 |      outlier_nonselection_line_alpha
 |      outlier_nonselection_line_cap
 |      outlier_nonselection_line_color
 |      outlier_nonselection_line_dash
 |      outlier_nonselection_line_join
 |      outlier_nonselection_line_width
 |      outlier_selection_alpha
 |      outlier_selection_color
 |      outlier_selection_fill_alpha
 |      outlier_selection_fill_color
 |      outlier_selection_line_alpha
 |      outlier_selection_line_cap
 |      outlier_selection_line_color
 |      outlier_selection_line_dash
 |      outlier_selection_line_join
 |      outlier_selection_line_width
 |      whisker_alpha
 |      whisker_color
 |      whisker_hover_alpha
 |      whisker_hover_color
 |      whisker_hover_line_alpha
 |      whisker_hover_line_cap
 |      whisker_hover_line_color
 |      whisker_hover_line_dash
 |      whisker_hover_line_join
 |      whisker_hover_line_width
 |      whisker_line_alpha
 |      whisker_line_cap
 |      whisker_line_color
 |      whisker_line_dash
 |      whisker_line_join
 |      whisker_line_width
 |      whisker_muted
 |      whisker_muted_alpha
 |      whisker_muted_color
 |      whisker_muted_line_alpha
 |      whisker_muted_line_cap
 |      whisker_muted_line_color
 |      whisker_muted_line_dash
 |      whisker_muted_line_join
 |      whisker_muted_line_width
 |      whisker_nonselection_alpha
 |      whisker_nonselection_color
 |      whisker_nonselection_line_alpha
 |      whisker_nonselection_line_cap
 |      whisker_nonselection_line_color
 |      whisker_nonselection_line_dash
 |      whisker_nonselection_line_join
 |      whisker_nonselection_line_width
 |      whisker_selection_alpha
 |      whisker_selection_color
 |      whisker_selection_line_alpha
 |      whisker_selection_line_cap
 |      whisker_selection_line_color
 |      whisker_selection_line_dash
 |      whisker_selection_line_join
 |      whisker_selection_line_width
 |      whisker_visible
 |  
 |  dataset(self, columns=None, *, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      Dataset
 |      
 |      Todo: Describe the reason for exposing this.
 |      
 |      Reference: Todo. Find link
 |      
 |      Parameters
 |      ----------
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('dataset')`.
 |      
 |      Returns
 |      -------
 |      obj: Holoviews Dataset
 |          You can `print` the object to study its composition and run `hv.help` on the the
 |          object to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |  
 |  density(self, y=None, by=None, *, alpha, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      Density plot. Same as `kde` plot
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/kde.html
 |      
 |      Parameters
 |      ----------
 |      y : string or sequence
 |          Field in the data to compute distribution on.
 |      by : string or sequence
 |          Field in the data to group by.
 |      kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('kde')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  errorbars(self, x=None, y=None, yerr1=None, yerr2=None, *, alpha, color, line_alpha, line_cap, line_color, line_dash, line_join, line_width, lower_head, muted, upper_head, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      `errorbars` provide a visual indicator for the variability of the plotted data on a graph.
 |      They are usually overlayed with other plots such as `scatter` , `line` or `bar` plots to
 |      indicate the variability.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/errorbars.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name to draw the x-position from. If not specified, the index is
 |          used.
 |      y : string, optional
 |          Field name to draw the y-position from
 |      yerr1 : string, optional
 |          Field name to draw symmetric / negative errors from
 |      yerr2 : string, optional
 |          Field name to draw positive errors from
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('errorbars')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Example
 |      -------
 |      
 |      >>> import pandas as pd
 |      >>> import hvplot.pandas
 |      >>> data = pd.DataFrame({
 |      ...     "y": [1.0, 1.2, 0.8],
 |      ...     "yerr1": [0.2, .4, 0.1],
 |      ...     "yerr2": [0.2, .2, 0.2],
 |      ... })
 |      >>> errorbars = data.hvplot.errorbars(y="y", yerr1="yerr1", yerr2="yerr2")
 |      >>> errorbars
 |      
 |      Normally you would overlay the `errorbars` on for example a `scatter` plot.
 |      
 |      >>> scatter = data.hvplot.scatter(y="y", color="green", size=50)
 |      >>> scatter * errorbars
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: https://docs.bokeh.org/en/latest/docs/user_guide/annotations.html#whiskers
 |      - HoloViews: https://holoviews.org/reference/elements/bokeh/ErrorBars.html
 |      - Matplotlib: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.errorbar.html
 |      - Pandas: https://pandas.pydata.org/docs/user_guide/visualization.html#visualization-errorbars
 |      - Plotly: https://plotly.com/python/error-bars/
 |      - Wikipedia: https://en.wikipedia.org/wiki/Error_bar
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      color
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      lower_head
 |      muted
 |      upper_head
 |      visible
 |  
 |  heatmap(self, x=None, y=None, C=None, colorbar=True, *, alpha, annular_alpha, annular_color, annular_fill_alpha, annular_fill_color, annular_hover_alpha, annular_hover_color, annular_hover_fill_alpha, annular_hover_fill_color, annular_hover_line_alpha, annular_hover_line_cap, annular_hover_line_color, annular_hover_line_dash, annular_hover_line_join, annular_hover_line_width, annular_line_alpha, annular_line_cap, annular_line_color, annular_line_dash, annular_line_join, annular_line_width, annular_muted, annular_muted_alpha, annular_muted_color, annular_muted_fill_alpha, annular_muted_fill_color, annular_muted_line_alpha, annular_muted_line_cap, annular_muted_line_color, annular_muted_line_dash, annular_muted_line_join, annular_muted_line_width, annular_nonselection_alpha, annular_nonselection_color, annular_nonselection_fill_alpha, annular_nonselection_fill_color, annular_nonselection_line_alpha, annular_nonselection_line_cap, annular_nonselection_line_color, annular_nonselection_line_dash, annular_nonselection_line_join, annular_nonselection_line_width, annular_selection_alpha, annular_selection_color, annular_selection_fill_alpha, annular_selection_fill_color, annular_selection_line_alpha, annular_selection_line_cap, annular_selection_line_color, annular_selection_line_dash, annular_selection_line_join, annular_selection_line_width, annular_visible, cmap, color, dilate, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, ticks_text_align, ticks_text_alpha, ticks_text_baseline, ticks_text_color, ticks_text_font, ticks_text_font_size, ticks_text_font_style, visible, xmarks_alpha, xmarks_color, xmarks_hover_alpha, xmarks_hover_color, xmarks_hover_line_alpha, xmarks_hover_line_cap, xmarks_hover_line_color, xmarks_hover_line_dash, xmarks_hover_line_join, xmarks_hover_line_width, xmarks_line_alpha, xmarks_line_cap, xmarks_line_color, xmarks_line_dash, xmarks_line_join, xmarks_line_width, xmarks_muted, xmarks_muted_alpha, xmarks_muted_color, xmarks_muted_line_alpha, xmarks_muted_line_cap, xmarks_muted_line_color, xmarks_muted_line_dash, xmarks_muted_line_join, xmarks_muted_line_width, xmarks_nonselection_alpha, xmarks_nonselection_color, xmarks_nonselection_line_alpha, xmarks_nonselection_line_cap, xmarks_nonselection_line_color, xmarks_nonselection_line_dash, xmarks_nonselection_line_join, xmarks_nonselection_line_width, xmarks_selection_alpha, xmarks_selection_color, xmarks_selection_line_alpha, xmarks_selection_line_cap, xmarks_selection_line_color, xmarks_selection_line_dash, xmarks_selection_line_join, xmarks_selection_line_width, xmarks_visible, ymarks_alpha, ymarks_color, ymarks_hover_alpha, ymarks_hover_color, ymarks_hover_line_alpha, ymarks_hover_line_cap, ymarks_hover_line_color, ymarks_hover_line_dash, ymarks_hover_line_join, ymarks_hover_line_width, ymarks_line_alpha, ymarks_line_cap, ymarks_line_color, ymarks_line_dash, ymarks_line_join, ymarks_line_width, ymarks_muted, ymarks_muted_alpha, ymarks_muted_color, ymarks_muted_line_alpha, ymarks_muted_line_cap, ymarks_muted_line_color, ymarks_muted_line_dash, ymarks_muted_line_join, ymarks_muted_line_width, ymarks_nonselection_alpha, ymarks_nonselection_color, ymarks_nonselection_line_alpha, ymarks_nonselection_line_cap, ymarks_nonselection_line_color, ymarks_nonselection_line_dash, ymarks_nonselection_line_join, ymarks_nonselection_line_width, ymarks_selection_alpha, ymarks_selection_color, ymarks_selection_line_alpha, ymarks_selection_line_cap, ymarks_selection_line_color, ymarks_selection_line_dash, ymarks_selection_line_join, ymarks_selection_line_width, ymarks_visible, reduce_function, logz, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      `heatmap` visualises tabular data indexed by two key dimensions as a grid of colored values.
 |      This allows spotting correlations in multivariate data and provides a high-level overview
 |      of how the two variables are plotted.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/heatmap.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name to draw x coordinates from. If not specified, the index is used.
 |      y : string
 |          Field name to draw y-positions from
 |      C : string, optional
 |          Field to draw heatmap color from. If not specified a simple count will be used.
 |      colorbar: boolean, optional
 |          Whether to display a colorbar. Default is True.
 |      logz : bool
 |          Whether to apply log scaling to the z-axis. Default is False.
 |      reduce_function : function, optional
 |          Function to compute statistics for heatmap, for example `np.mean`.
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('heatmap')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Example
 |      -------
 |      
 |      >>> import numpy as np
 |      >>> from bokeh.sampledata import sea_surface_temperature as sst
 |      
 |      >>> import hvplot.pandas
 |      
 |      >>> df = sst.sea_surface_temperature
 |      >>> df.hvplot.heatmap(
 |      ...     x="time.month", y="time.day", C="temperature", reduce_function=np.mean,
 |      ...     height=500, width=500, colorbar=False,
 |      >>> )
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: http://docs.bokeh.org/en/latest/docs/gallery/categorical_heatmap.html
 |      - HoloViews: https://holoviews.org/reference/elements/bokeh/HeatMap.html
 |      - Matplotlib: https://matplotlib.org/stable/gallery/images_contours_and_fields/image_annotated_heatmap.html
 |      - Plotly: https://plotly.com/python/heatmaps/
 |      - Wiki: https://en.wikipedia.org/wiki/Heat_map
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      annular_alpha
 |      annular_color
 |      annular_fill_alpha
 |      annular_fill_color
 |      annular_hover_alpha
 |      annular_hover_color
 |      annular_hover_fill_alpha
 |      annular_hover_fill_color
 |      annular_hover_line_alpha
 |      annular_hover_line_cap
 |      annular_hover_line_color
 |      annular_hover_line_dash
 |      annular_hover_line_join
 |      annular_hover_line_width
 |      annular_line_alpha
 |      annular_line_cap
 |      annular_line_color
 |      annular_line_dash
 |      annular_line_join
 |      annular_line_width
 |      annular_muted
 |      annular_muted_alpha
 |      annular_muted_color
 |      annular_muted_fill_alpha
 |      annular_muted_fill_color
 |      annular_muted_line_alpha
 |      annular_muted_line_cap
 |      annular_muted_line_color
 |      annular_muted_line_dash
 |      annular_muted_line_join
 |      annular_muted_line_width
 |      annular_nonselection_alpha
 |      annular_nonselection_color
 |      annular_nonselection_fill_alpha
 |      annular_nonselection_fill_color
 |      annular_nonselection_line_alpha
 |      annular_nonselection_line_cap
 |      annular_nonselection_line_color
 |      annular_nonselection_line_dash
 |      annular_nonselection_line_join
 |      annular_nonselection_line_width
 |      annular_selection_alpha
 |      annular_selection_color
 |      annular_selection_fill_alpha
 |      annular_selection_fill_color
 |      annular_selection_line_alpha
 |      annular_selection_line_cap
 |      annular_selection_line_color
 |      annular_selection_line_dash
 |      annular_selection_line_join
 |      annular_selection_line_width
 |      annular_visible
 |      cmap
 |      color
 |      dilate
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      ticks_text_align
 |      ticks_text_alpha
 |      ticks_text_baseline
 |      ticks_text_color
 |      ticks_text_font
 |      ticks_text_font_size
 |      ticks_text_font_style
 |      visible
 |      xmarks_alpha
 |      xmarks_color
 |      xmarks_hover_alpha
 |      xmarks_hover_color
 |      xmarks_hover_line_alpha
 |      xmarks_hover_line_cap
 |      xmarks_hover_line_color
 |      xmarks_hover_line_dash
 |      xmarks_hover_line_join
 |      xmarks_hover_line_width
 |      xmarks_line_alpha
 |      xmarks_line_cap
 |      xmarks_line_color
 |      xmarks_line_dash
 |      xmarks_line_join
 |      xmarks_line_width
 |      xmarks_muted
 |      xmarks_muted_alpha
 |      xmarks_muted_color
 |      xmarks_muted_line_alpha
 |      xmarks_muted_line_cap
 |      xmarks_muted_line_color
 |      xmarks_muted_line_dash
 |      xmarks_muted_line_join
 |      xmarks_muted_line_width
 |      xmarks_nonselection_alpha
 |      xmarks_nonselection_color
 |      xmarks_nonselection_line_alpha
 |      xmarks_nonselection_line_cap
 |      xmarks_nonselection_line_color
 |      xmarks_nonselection_line_dash
 |      xmarks_nonselection_line_join
 |      xmarks_nonselection_line_width
 |      xmarks_selection_alpha
 |      xmarks_selection_color
 |      xmarks_selection_line_alpha
 |      xmarks_selection_line_cap
 |      xmarks_selection_line_color
 |      xmarks_selection_line_dash
 |      xmarks_selection_line_join
 |      xmarks_selection_line_width
 |      xmarks_visible
 |      ymarks_alpha
 |      ymarks_color
 |      ymarks_hover_alpha
 |      ymarks_hover_color
 |      ymarks_hover_line_alpha
 |      ymarks_hover_line_cap
 |      ymarks_hover_line_color
 |      ymarks_hover_line_dash
 |      ymarks_hover_line_join
 |      ymarks_hover_line_width
 |      ymarks_line_alpha
 |      ymarks_line_cap
 |      ymarks_line_color
 |      ymarks_line_dash
 |      ymarks_line_join
 |      ymarks_line_width
 |      ymarks_muted
 |      ymarks_muted_alpha
 |      ymarks_muted_color
 |      ymarks_muted_line_alpha
 |      ymarks_muted_line_cap
 |      ymarks_muted_line_color
 |      ymarks_muted_line_dash
 |      ymarks_muted_line_join
 |      ymarks_muted_line_width
 |      ymarks_nonselection_alpha
 |      ymarks_nonselection_color
 |      ymarks_nonselection_line_alpha
 |      ymarks_nonselection_line_cap
 |      ymarks_nonselection_line_color
 |      ymarks_nonselection_line_dash
 |      ymarks_nonselection_line_join
 |      ymarks_nonselection_line_width
 |      ymarks_selection_alpha
 |      ymarks_selection_color
 |      ymarks_selection_line_alpha
 |      ymarks_selection_line_cap
 |      ymarks_selection_line_color
 |      ymarks_selection_line_dash
 |      ymarks_selection_line_join
 |      ymarks_selection_line_width
 |      ymarks_visible
 |  
 |  hexbin(self, x=None, y=None, C=None, colorbar=True, *, alpha, cmap, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, scale, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, reduce_function, gridsize, logz, min_count, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      The `hexbin` plot uses hexagons to split the area into several parts and attribute a color
 |      to it.
 |      
 |      `hexbin` offers a straightforward method for plotting dense data.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/hexbin.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name to draw x coordinates from. If not specified, the index is used.
 |      y : string
 |          Field name to draw y-positions from
 |      C : string, optional
 |          Field to draw hexbin color from. If not specified a simple count will be used.
 |      colorbar: boolean, optional
 |          Whether to display a colorbar. Default is True.
 |      reduce_function : function, optional
 |          Function to compute statistics for hexbins, for example `np.mean`.
 |      gridsize: int, optional
 |          The number of hexagons in the x-direction
 |      logz : bool
 |          Whether to apply log scaling to the z-axis. Default is False.
 |      min_count : number, optional
 |          The display threshold before a bin is shown, by default bins with
 |          a count of less than 1 are hidden
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('hexbin')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Example
 |      -------
 |      
 |      >>> import hvplot.pandas
 |      >>> import pandas as pd
 |      >>> import numpy as np
 |      
 |      >>> n = 500
 |      >>> df = pd.DataFrame({
 |      ...     "x": 2 + 2 * np.random.standard_normal(n),
 |      ...     "y": 2 + 2 * np.random.standard_normal(n),
 |      ... })
 |      >>> df.hvplot.hexbin("x", "y", clabel="Count", height=400, width=500)
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: https://docs.bokeh.org/en/latest/docs/gallery/hexbin.html
 |      - HoloViews: https://holoviews.org/reference/elements/bokeh/HexTiles.html
 |      - Plotly: https://plotly.com/python/hexbin-mapbox/
 |      - Wiki: https://think.design/services/data-visualization-data-design/hexbin/
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      cmap
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      scale
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  hist(self, y=None, by=None, *, alpha, cmap, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, bins, bin_range, normed, cumulative, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      Histogram
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/hist.html
 |      
 |      Parameters
 |      ----------
 |      y : string or sequence
 |          Field in the data to compute distribution on.
 |      by : string or sequence
 |          Field in the data to group by.
 |      kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('hist')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      cmap
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  kde(self, y=None, by=None, *, alpha, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, bw_method, ind, bandwidth, cut, filled, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      KDE plot
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/kde.html
 |      
 |      Parameters
 |      ----------
 |      y : string or sequence
 |          Field in the data to compute distribution on.
 |      by : string or sequence
 |          Field in the data to group by.
 |      kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('kde')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  labels(self, x=None, y=None, text=None, *, angle, cmap, muted, text_align, text_alpha, text_baseline, text_color, text_font, text_font_size, text_font_style, visible, c, xoffset, yoffset, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      Labels plot.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/labels.html
 |      
 |      Parameters
 |      ----------
 |      x, y : string, optional
 |          The coordinate variable along the x- and y-axis
 |      text : string, optional
 |          The column to draw the text labels from
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('labels')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      angle
 |      cmap
 |      muted
 |      text_align
 |      text_alpha
 |      text_baseline
 |      text_color
 |      text_font
 |      text_font_size
 |      text_font_style
 |      visible
 |  
 |  line(self, x=None, y=None, *, alpha, color, hover_alpha, hover_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      The `line` plot connects the points with a continous curve.
 |      
 |      A `line` plot is useful when data is continuous and has a continuous axis.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/line.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name(s) to draw x-positions from. If not specified, the index is
 |          used.
 |      y : string or list, optional
 |          Field name(s) to draw y-positions from. If not specified, all numerical
 |          fields are used.
 |      by : string, optional
 |          A single column or list of columns to group by. All the subgroups are visualized.
 |      groupby: string, list, optional
 |          A single field or list of fields to group and filter by. Adds one or more widgets to
 |          select the subgroup(s) to visualize.
 |      color : str or array-like, optional.
 |          The color for each of the series. Possible values are:
 |      
 |          A single color string referred to by name, RGB or RGBA code, for instance 'red' or
 |          '#a98d19.
 |      
 |          A sequence of color strings referred to by name, RGB or RGBA code, which will be used
 |          for each series recursively. For instance ['green','yellow'] each field’s line will be
 |          filled in green or yellow, alternatively. If there is only a single series to be
 |          plotted, then only the first color from the color list will be used.
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('line')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Examples
 |      --------
 |      
 |      >>> import hvplot.pandas
 |      >>> from bokeh.sampledata.degrees import data as deg
 |      >>> line = deg.hvplot.line(
 |      ...     x='Year', y=['Art and Performance', 'Business', 'Biology', 'Education', 'Computer Science'],
 |      ...     value_label='% of Degrees Earned by Women', legend='top', height=500, width=620
 |      ... )
 |      >>> line
 |      
 |      You can can add *markers* to a `line` plot by overlaying with a `scatter` plot.
 |      
 |      >>> scatter = deg.hvplot.scatter(
 |      ...     x='Year', y=['Art and Performance', 'Business', 'Biology', 'Education', 'Computer Science'],
 |      ...     value_label='% of Degrees Earned by Women', legend='top', height=500, width=620
 |      ... )
 |      >>> line * scatter
 |      
 |      Please note that you can pass widgets or reactive functions as arguments instead of
 |      literal values, c.f. https://hvplot.holoviz.org/user_guide/Widgets.html.
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: https://docs.bokeh.org/en/latest/docs/reference/models/glyphs/line.html
 |      - HoloViews: https://holoviews.org/reference/elements/bokeh/Curve.html
 |      - Pandas: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.line.html
 |      - Plotly: https://plotly.com/python/line-charts/
 |      - Matplotlib: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html
 |      - Wiki: https://en.wikipedia.org/wiki/Line_chart
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      color
 |      hover_alpha
 |      hover_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  ohlc(self, x=None, y=None, *, alpha, cmap, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, bar_width, pos_color, neg_color, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      The `ohlc` plot visualizes the open, high, low and close prices of stocks and other assets.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/ohlc.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name to draw x coordinates from. If not specified, the index is used.
 |      y : list or tuple, optional
 |          Field names of the OHLC fields. Default is ["open", "high", "low", "close"]
 |      line_color : string, optional
 |          The line color. Default is black
 |      pos_color : string, optional
 |          The color indicating a positive change. Default is green.
 |      neg_color : string, optional
 |          The color indicating a negative change. Default is red.
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('ohlc')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Example
 |      -------
 |      >>> import hvplot.pandas
 |      >>> import pandas as pd
 |      >>> data = pd.DataFrame({
 |      ...     "open": [100, 101, 102],
 |      ...     "high": [101, 103, 104],
 |      ...     "low": [99, 100, 100],
 |      ...     "close": [101, 99, 103],
 |      ... }, index=[pd.Timestamp("2022-08-01"), pd.Timestamp("2022-08-02"), pd.Timestamp("2022-08-03")])
 |      >>> data.hvplot.ohlc()
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: https://docs.bokeh.org/en/latest/docs/gallery/candlestick.html
 |      - Matplotlib: https://www.statology.org/matplotlib-python-candlestick-chart/
 |      - Plotly: https://plotly.com/python/ohlc-charts/
 |      - Wikipedia: https://en.wikipedia.org/wiki/Candlestick_chart
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      cmap
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  paths(self, x=None, y=None, c=None, *, alpha, cmap, color, hover_alpha, hover_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      LineString and LineRing plot for geopandas dataframes.
 |      
 |      Reference: https://github.com/holoviz/hvplot/issues/828
 |      
 |      Parameters
 |      ----------
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('paths')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      cmap
 |      color
 |      hover_alpha
 |      hover_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  points(self, x=None, y=None, *, alpha, angle, cmap, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, marker, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, palette, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, size, visible, s, c, scale, logz, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      Point plot use for 2D coordinate systems
 |      
 |      Reference: https://hvplot.holoviz.org/reference/geopandas/points.html
 |      
 |      Parameters
 |      ----------
 |      x, y : string, optional
 |          The coordinate variable along the x- and y-axis
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('points')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      angle
 |      cmap
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      marker
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      palette
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      size
 |      visible
 |  
 |  polygons(self, x=None, y=None, c=None, *, alpha, cmap, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, logz, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      Polygon plot for geopandas dataframes
 |      
 |      Reference: https://hvplot.holoviz.org/reference/geopandas/polygons.html
 |      
 |      Parameters
 |      ----------
 |      c: string, optional
 |          The dimension to color the polygons by
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('polygons')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      cmap
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  scatter(self, x=None, y=None, *, alpha, angle, cmap, color, fill_alpha, fill_color, hover_alpha, hover_color, hover_fill_alpha, hover_fill_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, marker, muted_alpha, muted_color, muted_fill_alpha, muted_fill_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_fill_alpha, nonselection_fill_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, palette, selection_alpha, selection_color, selection_fill_alpha, selection_fill_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, size, visible, s, c, scale, logz, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      The `scatter` plot visualizes your points as markers in 2D space. You can visualize
 |      one more dimension by using colors.
 |      
 |      The `scatter` plot is a good first way to plot data with non continuous axes.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/scatter.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name(s) to draw x-positions from. If not specified, the index is
 |          used.
 |      y : string or list, optional
 |          Field name(s) to draw y-positions from. If not specified, all numerical
 |          fields are used.
 |      marker : string, optional
 |          The marker shape specified above can be any supported by matplotlib, e.g. s, d, o etc.
 |          See https://matplotlib.org/stable/api/markers_api.html.
 |      c : string, optional
 |          A color or a Field name to draw the color of the marker from
 |      s : int, optional, also available as 'size'
 |          The size of the marker
 |      by : string, optional
 |          A single field or list of fields to group by. All the subgroups are visualized.
 |      groupby: string, list, optional
 |          A single field or list of fields to group and filter by. Adds one or more widgets to
 |          select the subgroup(s) to visualize.
 |      scale: number, optional, abbreviation `s`.
 |          Scaling factor to apply to point scaling.
 |      logz : bool
 |          Whether to apply log scaling to the z-axis. Default is False.
 |      color : str or array-like, optional.
 |          The color for each of the series. Possible values are:
 |      
 |          A single color string referred to by name, RGB or RGBA code, for instance 'red' or
 |          '#a98d19.
 |      
 |          A sequence of color strings referred to by name, RGB or RGBA code, which will be used
 |          for each series recursively. For instance ['green','yellow'] each field’s line will be
 |          filled in green or yellow, alternatively. If there is only a single series to be
 |          plotted, then only the first color from the color list will be used.
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('scatter')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Example
 |      -------
 |      
 |      >>> import hvplot.pandas
 |      >>> from bokeh.sampledata.iris import flowers as df
 |      >>> df.hvplot.scatter(
 |      ...     x='sepal_length', y='sepal_width', by='species',
 |      ...     legend='top', height=400, width=400
 |      ... )
 |      
 |      The points will be grouped and color coded `by` the categorical values in the 'species'
 |      column.
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: http://docs.bokeh.org/en/latest/docs/user_guide/plotting.html#scatter-markers
 |      - HoloViews: http://holoviews.org/reference/elements/matplotlib/Scatter.html
 |      - Pandas: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.scatter.html
 |      - Plotly: https://plotly.com/python/line-and-scatter/
 |      - Matplotlib:  https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.scatter.html
 |      - Wiki: https://en.wikipedia.org/wiki/Scatter_plot
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      angle
 |      cmap
 |      color
 |      fill_alpha
 |      fill_color
 |      hover_alpha
 |      hover_color
 |      hover_fill_alpha
 |      hover_fill_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      marker
 |      muted_alpha
 |      muted_color
 |      muted_fill_alpha
 |      muted_fill_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_fill_alpha
 |      nonselection_fill_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      palette
 |      selection_alpha
 |      selection_color
 |      selection_fill_alpha
 |      selection_fill_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      size
 |      visible
 |  
 |  step(self, x=None, y=None, where='mid', *, alpha, color, hover_alpha, hover_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, selection_alpha, selection_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      The `step` plot connects the points with piece-wise constant curves.
 |      
 |      The `step` plot can be used pretty much anytime the `line` plot might be used, and has many
 |      of the same options available.
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/step.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name(s) to draw x-positions from. If not specified, the index is
 |          used.
 |      y : string or list, optional
 |          Field name(s) to draw y-positions from. If not specified, all numerical
 |          fields are used.
 |      by : string, optional
 |          A single field or list of fields to group by. All the subgroups are visualized.
 |      groupby: string, list, optional
 |          A single field or list of fields to group and filter by. Adds one or more widgets to
 |          select the subgroup(s) to visualize.
 |      where: string, optional
 |          The interpolation method. One of 'mid', 'pre', 'post'. Default is 'mid'.
 |      color : str or array-like, optional.
 |          The color for each of the series. Possible values are:
 |      
 |          A single color string referred to by name, RGB or RGBA code, for instance 'red' or
 |          '#a98d19.
 |      
 |          A sequence of color strings referred to by name, RGB or RGBA code, which will be used
 |          for each series recursively. For instance ['green','yellow'] each field’s line will be
 |          filled in green or yellow, alternatively. If there is only a single series to be
 |          plotted, then only the first color from the color list will be used.
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('step')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      Examples
 |      --------
 |      
 |      >>> import hvplot.pandas
 |      >>> from bokeh.sampledata.degrees import data as deg
 |      >>> plot = deg.hvplot.step(
 |      ...     x='Year',
 |      ...     y=['Art and Performance', 'Business', 'Biology', 'Education', 'Computer Science'],
 |      ...     value_label='% of Degrees Earned by Women', legend='top', height=500, width=1000
 |      ... )
 |      >>> plot
 |      
 |      You can can add *markers* to a `step` plot by overlaying with a `scatter` plot.
 |      
 |      >>> markers = deg.hvplot.scatter(
 |      ...     x='Year',
 |      ...     y=['Art and Performance', 'Business', 'Biology', 'Education', 'Computer Science'],
 |      ...     value_label='% of Degrees Earned by Women', legend='top', height=500, width=1000
 |      ... )
 |      >>> plot*markers
 |      
 |      Please note that you can pass widgets or reactive functions as arguments instead of
 |      literal values, c.f. https://hvplot.holoviz.org/user_guide/Widgets.html.
 |      
 |      References
 |      ----------
 |      
 |      - Bokeh: https://docs.bokeh.org/en/latest/docs/reference/models/glyphs/step.html
 |      - HoloViews: https://holoviews.org/gallery/demos/bokeh/step_chart.html
 |      - Pandas: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.line.html (use `draw_style='step')
 |      - Plotly: https://plotly.com/python/line-charts/ (See the Interpolation Section)
 |      - Matplotlib: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.step.html
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      color
 |      hover_alpha
 |      hover_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      selection_alpha
 |      selection_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  table(self, columns=None, *, editable, fit_columns, index_position, row_headers, scroll_to_selection, selectable, sortable, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      Table
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/table.html
 |      
 |      Parameters
 |      ----------
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('table')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      editable
 |      fit_columns
 |      index_position
 |      row_headers
 |      scroll_to_selection
 |      selectable
 |      sortable
 |      visible
 |  
 |  vectorfield(self, x=None, y=None, angle=None, mag=None, *, alpha, cmap, color, hover_alpha, hover_color, hover_line_alpha, hover_line_cap, hover_line_color, hover_line_dash, hover_line_join, hover_line_width, line_alpha, line_cap, line_color, line_dash, line_join, line_width, muted, muted_alpha, muted_color, muted_line_alpha, muted_line_cap, muted_line_color, muted_line_dash, muted_line_join, muted_line_width, nonselection_alpha, nonselection_color, nonselection_line_alpha, nonselection_line_cap, nonselection_line_color, nonselection_line_dash, nonselection_line_join, nonselection_line_width, scale, selection_alpha, selection_color, selection_line_alpha, selection_line_cap, selection_line_color, selection_line_dash, selection_line_join, selection_line_width, visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      Vectorfield plot
 |      
 |      Reference: https://hvplot.holoviz.org/reference/xarray/vectorfield.html
 |      
 |      Parameters
 |      ----------
 |      x : string, optional
 |          Field name to draw x-positions from
 |      y : string, optional
 |          Field name to draw y-positions from
 |      mag : string, optional
 |          Magnitude
 |      angle : string, optional
 |          Angle
 |      **kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('vectorfield')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      alpha
 |      cmap
 |      color
 |      hover_alpha
 |      hover_color
 |      hover_line_alpha
 |      hover_line_cap
 |      hover_line_color
 |      hover_line_dash
 |      hover_line_join
 |      hover_line_width
 |      line_alpha
 |      line_cap
 |      line_color
 |      line_dash
 |      line_join
 |      line_width
 |      muted
 |      muted_alpha
 |      muted_color
 |      muted_line_alpha
 |      muted_line_cap
 |      muted_line_color
 |      muted_line_dash
 |      muted_line_join
 |      muted_line_width
 |      nonselection_alpha
 |      nonselection_color
 |      nonselection_line_alpha
 |      nonselection_line_cap
 |      nonselection_line_color
 |      nonselection_line_dash
 |      nonselection_line_join
 |      nonselection_line_width
 |      scale
 |      selection_alpha
 |      selection_color
 |      selection_line_alpha
 |      selection_line_cap
 |      selection_line_color
 |      selection_line_dash
 |      selection_line_join
 |      selection_line_width
 |      visible
 |  
 |  violin(self, y=None, by=None, *, box_alpha, box_cmap, box_color, box_fill_alpha, box_fill_color, box_hover_alpha, box_hover_color, box_hover_fill_alpha, box_hover_fill_color, box_hover_line_alpha, box_hover_line_cap, box_hover_line_color, box_hover_line_dash, box_hover_line_join, box_hover_line_width, box_line_alpha, box_line_cap, box_line_color, box_line_dash, box_line_join, box_line_width, box_muted, box_muted_alpha, box_muted_color, box_muted_fill_alpha, box_muted_fill_color, box_muted_line_alpha, box_muted_line_cap, box_muted_line_color, box_muted_line_dash, box_muted_line_join, box_muted_line_width, box_nonselection_alpha, box_nonselection_color, box_nonselection_fill_alpha, box_nonselection_fill_color, box_nonselection_line_alpha, box_nonselection_line_cap, box_nonselection_line_color, box_nonselection_line_dash, box_nonselection_line_join, box_nonselection_line_width, box_selection_alpha, box_selection_color, box_selection_fill_alpha, box_selection_fill_color, box_selection_line_alpha, box_selection_line_cap, box_selection_line_color, box_selection_line_dash, box_selection_line_join, box_selection_line_width, box_visible, cmap, median_alpha, median_color, outline_alpha, outline_color, outline_hover_alpha, outline_hover_color, outline_hover_line_alpha, outline_hover_line_cap, outline_hover_line_color, outline_hover_line_dash, outline_hover_line_join, outline_hover_line_width, outline_line_alpha, outline_line_cap, outline_line_color, outline_line_dash, outline_line_join, outline_line_width, outline_muted, outline_muted_alpha, outline_muted_color, outline_muted_line_alpha, outline_muted_line_cap, outline_muted_line_color, outline_muted_line_dash, outline_muted_line_join, outline_muted_line_width, outline_nonselection_alpha, outline_nonselection_color, outline_nonselection_line_alpha, outline_nonselection_line_cap, outline_nonselection_line_color, outline_nonselection_line_dash, outline_nonselection_line_join, outline_nonselection_line_width, outline_selection_alpha, outline_selection_color, outline_selection_line_alpha, outline_selection_line_cap, outline_selection_line_color, outline_selection_line_dash, outline_selection_line_join, outline_selection_line_width, outline_visible, stats_alpha, stats_color, stats_hover_alpha, stats_hover_color, stats_hover_line_alpha, stats_hover_line_cap, stats_hover_line_color, stats_hover_line_dash, stats_hover_line_join, stats_hover_line_width, stats_line_alpha, stats_line_cap, stats_line_color, stats_line_dash, stats_line_join, stats_line_width, stats_muted, stats_muted_alpha, stats_muted_color, stats_muted_line_alpha, stats_muted_line_cap, stats_muted_line_color, stats_muted_line_dash, stats_muted_line_join, stats_muted_line_width, stats_nonselection_alpha, stats_nonselection_color, stats_nonselection_line_alpha, stats_nonselection_line_cap, stats_nonselection_line_color, stats_nonselection_line_dash, stats_nonselection_line_join, stats_nonselection_line_width, stats_selection_alpha, stats_selection_color, stats_selection_line_alpha, stats_selection_line_cap, stats_selection_line_color, stats_selection_line_dash, stats_selection_line_join, stats_selection_line_width, stats_visible, violin_alpha, violin_cmap, violin_color, violin_fill_alpha, violin_fill_color, violin_hover_alpha, violin_hover_color, violin_hover_fill_alpha, violin_hover_fill_color, violin_hover_line_alpha, violin_hover_line_cap, violin_hover_line_color, violin_hover_line_dash, violin_hover_line_join, violin_hover_line_width, violin_line_alpha, violin_line_cap, violin_line_color, violin_line_dash, violin_line_join, violin_line_width, violin_muted, violin_muted_alpha, violin_muted_color, violin_muted_fill_alpha, violin_muted_fill_color, violin_muted_line_alpha, violin_muted_line_cap, violin_muted_line_color, violin_muted_line_dash, violin_muted_line_join, violin_muted_line_width, violin_nonselection_alpha, violin_nonselection_color, violin_nonselection_fill_alpha, violin_nonselection_fill_color, violin_nonselection_line_alpha, violin_nonselection_line_cap, violin_nonselection_line_color, violin_nonselection_line_dash, violin_nonselection_line_join, violin_nonselection_line_width, violin_selection_alpha, violin_selection_color, violin_selection_fill_alpha, violin_selection_fill_color, violin_selection_line_alpha, violin_selection_line_cap, violin_selection_line_color, violin_selection_line_dash, violin_selection_line_join, violin_selection_line_width, violin_visible, width, height, shared_axes, grid, legend, rot, xlim, ylim, xticks, yticks, colorbar, invert, title, logx, logy, loglog, xaxis, yaxis, xformatter, yformatter, xlabel, ylabel, clabel, padding, responsive, max_height, max_width, min_height, min_width, frame_height, frame_width, aspect, data_aspect, fontscale, datashade, rasterize, x_sampling, y_sampling, aggregator, **kwargs)
 |      Violin plot
 |      
 |      Reference: https://hvplot.holoviz.org/reference/pandas/violin.html
 |      
 |      Parameters
 |      ----------
 |      y : string or sequence
 |          Field in the data to compute distribution on.
 |      by : string or sequence
 |          Field in the data to group by.
 |      kwds : optional
 |          Additional keywords arguments are documented in `hvplot.help('violin')`.
 |      
 |      Returns
 |      -------
 |      A Holoviews object. You can `print` the object to study its composition and run
 |      
 |      >>> import holoviews as hv
 |      >>> hv.help(the_holoviews_object)
 |      
 |      to learn more about its parameters and options.
 |      
 |      References
 |      ----------
 |      
 |      - Wiki: https://en.wikipedia.org/wiki/Box_plot
 |      
 |      
 |      Generic options
 |      ---------------
 |      clim: tuple
 |          Lower and upper bound of the color scale
 |      cnorm (default='linear'): str
 |          Color scaling which must be one of 'linear', 'log' or 'eq_hist'
 |      colorbar (default=False): boolean
 |          Enables a colorbar
 |      fontscale: number
 |          Scales the size of all fonts by the same amount, e.g. fontscale=1.5
 |          enlarges all fonts (title, xticks, labels etc.) by 50%
 |      fontsize: number or dict
 |          Set title, label and legend text to the same fontsize. Finer control
 |          by using a dict: {'title': '15pt', 'ylabel': '5px', 'ticks': 20}
 |      flip_xaxis/flip_yaxis: boolean
 |          Whether to flip the axis left to right or up and down respectively
 |      grid (default=False): boolean
 |          Whether to show a grid
 |      hover : boolean
 |          Whether to show hover tooltips, default is True unless datashade is
 |          True in which case hover is False by default
 |      hover_cols (default=[]): list or str
 |          Additional columns to add to the hover tool or 'all' which will
 |          includes all columns (including indexes if use_index is True).
 |      invert (default=False): boolean
 |          Swaps x- and y-axis
 |      frame_width/frame_height: int
 |          The width and height of the data area of the plot
 |      legend (default=True): boolean or str
 |          Whether to show a legend, or a legend position
 |          ('top', 'bottom', 'left', 'right')
 |      logx/logy (default=False): boolean
 |          Enables logarithmic x- and y-axis respectively
 |      logz (default=False): boolean
 |          Enables logarithmic colormapping
 |      loglog (default=False): boolean
 |          Enables logarithmic x- and y-axis
 |      max_width/max_height: int
 |          The maximum width and height of the plot for responsive modes
 |      min_width/min_height: int
 |          The minimum width and height of the plot for responsive modes
 |      padding: number or tuple
 |          Fraction by which to increase auto-ranged extents to make
 |          datapoints more visible around borders. Supports tuples to
 |          specify different amount of padding for x- and y-axis and
 |          tuples of tuples to specify different amounts of padding for
 |          upper and lower bounds.
 |      rescale_discrete_levels (default=True): boolean
 |          If `cnorm='eq_hist` and there are only a few discrete values,
 |          then `rescale_discrete_levels=True` (the default) decreases
 |          the lower limit of the autoranged span so that the values are
 |          rendering towards the (more visible) top of the `cmap` range, 
 |          thus avoiding washout of the lower values.  Has no effect if
 |          `cnorm!=`eq_hist`.
 |      responsive: boolean
 |          Whether the plot should responsively resize depending on the
 |          size of the browser. Responsive mode will only work if at
 |          least one dimension of the plot is left undefined, e.g. when
 |          width and height or width and aspect are set the plot is set
 |          to a fixed size, ignoring any responsive option.
 |      rot: number
 |          Rotates the axis ticks along the x-axis by the specified
 |          number of degrees.
 |      shared_axes (default=True): boolean
 |          Whether to link axes between plots
 |      transforms (default={}): dict
 |          A dictionary of HoloViews dim transforms to apply before plotting
 |      title (default=''): str
 |          Title for the plot
 |      tools (default=[]): list
 |          List of tool instances or strings (e.g. ['tap', box_select'])
 |      xaxis/yaxis: str or None
 |          Whether to show the x/y-axis and whether to place it at the
 |          'top'/'bottom' and 'left'/'right' respectively.
 |      xformatter/yformatter (default=None): str or TickFormatter
 |          Formatter for the x-axis and y-axis (accepts printf formatter,
 |          e.g. '%.3f', and bokeh TickFormatter)
 |      xlabel/ylabel/clabel (default=None): str
 |          Axis labels for the x-axis, y-axis, and colorbar
 |      xlim/ylim (default=None): tuple or list
 |          Plot limits of the x- and y-axis
 |      xticks/yticks (default=None): int or list
 |          Ticks along x- and y-axis specified as an integer, list of
 |          ticks positions, or list of tuples of the tick positions and labels
 |      width (default=700)/height (default=300): int
 |          The width and height of the plot in pixels
 |      attr_labels (default=None): bool
 |          Whether to use an xarray object's attributes as labels, defaults to
 |          None to allow best effort without throwing a warning. Set to True
 |          to see warning if the attrs can't be found, set to False to disable
 |          the behavior.
 |      sort_date (default=True): bool
 |          Whether to sort the x-axis by date before plotting
 |      symmetric (default=None): bool
 |          Whether the data are symmetric around zero. If left unset, the data
 |          will be checked for symmetry as long as the size is less than
 |          ``check_symmetric_max``.
 |      check_symmetric_max (default=1000000):
 |          Size above which to stop checking for symmetry by default on the data.
 |      
 |      Datashader options
 |      ------------------
 |      aggregator (default=None):
 |          Aggregator to use when applying rasterize or datashade operation
 |          (valid options include 'mean', 'count', 'min', 'max' and more, and
 |          datashader reduction objects)
 |      dynamic (default=True):
 |          Whether to return a dynamic plot which sends updates on widget and
 |          zoom/pan events or whether all the data should be embedded
 |          (warning: for large groupby operations embedded data can become
 |          very large if dynamic=False)
 |      datashade (default=False):
 |          Whether to apply rasterization and shading (colormapping) using
 |          the Datashader library, returning an RGB object instead of 
 |          individual points
 |      dynspread (default=False):
 |          For plots generated with datashade=True or rasterize=True, 
 |          automatically increase the point size when the data is sparse
 |          so that individual points become more visible
 |      rasterize (default=False):
 |          Whether to apply rasterization using the Datashader library,
 |          returning an aggregated Image (to be colormapped by the 
 |          plotting backend) instead of individual points
 |      x_sampling/y_sampling (default=None):
 |          Specifies the smallest allowed sampling interval along the x/y axis.
 |      
 |      Geographic options
 |      ------------------
 |      coastline (default=False):
 |          Whether to display a coastline on top of the plot, setting
 |          coastline='10m'/'50m'/'110m' specifies a specific scale.
 |      crs (default=None):
 |          Coordinate reference system of the data specified as Cartopy
 |          CRS object, proj.4 string or EPSG code.
 |      features (default=None): dict or list
 |          A list of features or a dictionary of features and the scale
 |          at which to render it. Available features include 'borders',
 |          'coastline', 'lakes', 'land', 'ocean', 'rivers' and 'states'.
 |          Available scales include '10m'/'50m'/'110m'.
 |      geo (default=False):
 |          Whether the plot should be treated as geographic (and assume
 |          PlateCarree, i.e. lat/lon coordinates).
 |      global_extent (default=False):
 |          Whether to expand the plot extent to span the whole globe.
 |      project (default=False):
 |          Whether to project the data before plotting (adds initial
 |          overhead but avoids projecting data when plot is dynamically
 |          updated).
 |      tiles (default=False):
 |          Whether to overlay the plot on a tile source. Tiles sources
 |          can be selected by name or a tiles object or class can be passed,
 |          the default is 'Wikipedia'.
 |      
 |      Style options
 |      -------------
 |      
 |      box_alpha
 |      box_cmap
 |      box_color
 |      box_fill_alpha
 |      box_fill_color
 |      box_hover_alpha
 |      box_hover_color
 |      box_hover_fill_alpha
 |      box_hover_fill_color
 |      box_hover_line_alpha
 |      box_hover_line_cap
 |      box_hover_line_color
 |      box_hover_line_dash
 |      box_hover_line_join
 |      box_hover_line_width
 |      box_line_alpha
 |      box_line_cap
 |      box_line_color
 |      box_line_dash
 |      box_line_join
 |      box_line_width
 |      box_muted
 |      box_muted_alpha
 |      box_muted_color
 |      box_muted_fill_alpha
 |      box_muted_fill_color
 |      box_muted_line_alpha
 |      box_muted_line_cap
 |      box_muted_line_color
 |      box_muted_line_dash
 |      box_muted_line_join
 |      box_muted_line_width
 |      box_nonselection_alpha
 |      box_nonselection_color
 |      box_nonselection_fill_alpha
 |      box_nonselection_fill_color
 |      box_nonselection_line_alpha
 |      box_nonselection_line_cap
 |      box_nonselection_line_color
 |      box_nonselection_line_dash
 |      box_nonselection_line_join
 |      box_nonselection_line_width
 |      box_selection_alpha
 |      box_selection_color
 |      box_selection_fill_alpha
 |      box_selection_fill_color
 |      box_selection_line_alpha
 |      box_selection_line_cap
 |      box_selection_line_color
 |      box_selection_line_dash
 |      box_selection_line_join
 |      box_selection_line_width
 |      box_visible
 |      cmap
 |      median_alpha
 |      median_color
 |      outline_alpha
 |      outline_color
 |      outline_hover_alpha
 |      outline_hover_color
 |      outline_hover_line_alpha
 |      outline_hover_line_cap
 |      outline_hover_line_color
 |      outline_hover_line_dash
 |      outline_hover_line_join
 |      outline_hover_line_width
 |      outline_line_alpha
 |      outline_line_cap
 |      outline_line_color
 |      outline_line_dash
 |      outline_line_join
 |      outline_line_width
 |      outline_muted
 |      outline_muted_alpha
 |      outline_muted_color
 |      outline_muted_line_alpha
 |      outline_muted_line_cap
 |      outline_muted_line_color
 |      outline_muted_line_dash
 |      outline_muted_line_join
 |      outline_muted_line_width
 |      outline_nonselection_alpha
 |      outline_nonselection_color
 |      outline_nonselection_line_alpha
 |      outline_nonselection_line_cap
 |      outline_nonselection_line_color
 |      outline_nonselection_line_dash
 |      outline_nonselection_line_join
 |      outline_nonselection_line_width
 |      outline_selection_alpha
 |      outline_selection_color
 |      outline_selection_line_alpha
 |      outline_selection_line_cap
 |      outline_selection_line_color
 |      outline_selection_line_dash
 |      outline_selection_line_join
 |      outline_selection_line_width
 |      outline_visible
 |      stats_alpha
 |      stats_color
 |      stats_hover_alpha
 |      stats_hover_color
 |      stats_hover_line_alpha
 |      stats_hover_line_cap
 |      stats_hover_line_color
 |      stats_hover_line_dash
 |      stats_hover_line_join
 |      stats_hover_line_width
 |      stats_line_alpha
 |      stats_line_cap
 |      stats_line_color
 |      stats_line_dash
 |      stats_line_join
 |      stats_line_width
 |      stats_muted
 |      stats_muted_alpha
 |      stats_muted_color
 |      stats_muted_line_alpha
 |      stats_muted_line_cap
 |      stats_muted_line_color
 |      stats_muted_line_dash
 |      stats_muted_line_join
 |      stats_muted_line_width
 |      stats_nonselection_alpha
 |      stats_nonselection_color
 |      stats_nonselection_line_alpha
 |      stats_nonselection_line_cap
 |      stats_nonselection_line_color
 |      stats_nonselection_line_dash
 |      stats_nonselection_line_join
 |      stats_nonselection_line_width
 |      stats_selection_alpha
 |      stats_selection_color
 |      stats_selection_line_alpha
 |      stats_selection_line_cap
 |      stats_selection_line_color
 |      stats_selection_line_dash
 |      stats_selection_line_join
 |      stats_selection_line_width
 |      stats_visible
 |      violin_alpha
 |      violin_cmap
 |      violin_color
 |      violin_fill_alpha
 |      violin_fill_color
 |      violin_hover_alpha
 |      violin_hover_color
 |      violin_hover_fill_alpha
 |      violin_hover_fill_color
 |      violin_hover_line_alpha
 |      violin_hover_line_cap
 |      violin_hover_line_color
 |      violin_hover_line_dash
 |      violin_hover_line_join
 |      violin_hover_line_width
 |      violin_line_alpha
 |      violin_line_cap
 |      violin_line_color
 |      violin_line_dash
 |      violin_line_join
 |      violin_line_width
 |      violin_muted
 |      violin_muted_alpha
 |      violin_muted_color
 |      violin_muted_fill_alpha
 |      violin_muted_fill_color
 |      violin_muted_line_alpha
 |      violin_muted_line_cap
 |      violin_muted_line_color
 |      violin_muted_line_dash
 |      violin_muted_line_join
 |      violin_muted_line_width
 |      violin_nonselection_alpha
 |      violin_nonselection_color
 |      violin_nonselection_fill_alpha
 |      violin_nonselection_fill_color
 |      violin_nonselection_line_alpha
 |      violin_nonselection_line_cap
 |      violin_nonselection_line_color
 |      violin_nonselection_line_dash
 |      violin_nonselection_line_join
 |      violin_nonselection_line_width
 |      violin_selection_alpha
 |      violin_selection_color
 |      violin_selection_fill_alpha
 |      violin_selection_fill_color
 |      violin_selection_line_alpha
 |      violin_selection_line_cap
 |      violin_selection_line_color
 |      violin_selection_line_dash
 |      violin_selection_line_join
 |      violin_selection_line_width
 |      violin_visible
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  __all__ = ['line', 'step', 'scatter', 'area', 'errorbars', 'ohlc', 'he...
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from hvPlotBase:
 |  
 |  __call__(self, x=None, y=None, kind=None, **kwds)
 |      Call self as a function.
 |  
 |  __dir__(self)
 |      List default attributes and custom defined plots.
 |  
 |  __getattribute__(self, name)
 |      Custom getattribute to expose user defined subplots.
 |  
 |  __init__(self, data, custom_plots={}, **metadata)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from hvPlotBase:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)